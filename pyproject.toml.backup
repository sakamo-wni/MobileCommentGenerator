[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mobile-comment-generator"
version = "0.1.0"
description = "天気コメント生成システム - LangGraphとLLMを活用した天気予報コメント自動生成"
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
authors = [
    {name = "WNI Team", email = "sakamo-wni@users.noreply.github.com"}
]
keywords = ["weather", "llm", "langgraph", "comment-generation", "ai"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

# 基本依存関係 - 柔軟なバージョン指定
dependencies = [
    # Core dependencies
    "python-dotenv>=1.0.0",
    "pydantic>=2.5.0",
    # LangGraph ecosystem - 互換性重視
    "langgraph>=0.0.35",
    "langchain>=0.1.0",
    "langchain-core>=0.1.42", # langgraph 0.0.35の要求に合わせる
    # LLM Providers
    "openai>=1.12.0",
    "google-generativeai>=0.3.2",
    "anthropic>=0.18.1",
    # AWS - Removed (using local CSV files instead)
    # API and Web
    "requests>=2.31.0",
    "aiohttp>=3.9.1",
    # Data Processing
    "pandas>=2.1.4",
    "numpy>=1.26.2",
    "scikit-learn>=1.3.2",
    # UI Framework
    "streamlit>=1.28.0",
    # Utilities
    "pyperclip>=1.8.2",
    "pytz>=2023.3",
    "loguru>=0.7.2",
    "uvicorn[standard]>=0.34.3",
    "orjson>=3.10.18",
    # Security
    "cryptography>=41.0.0",
    # Web Framework
    "fastapi>=0.104.0",
]

# オプション依存関係 - 用途別グループ化
[project.optional-dependencies]
# 開発用依存関係
dev = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.1",
    "pytest-mock>=3.12.0",
    "black>=23.12.0",
    "isort>=5.13.2",
    "mypy>=1.7.1",
    "ruff>=0.1.9",
    "flake8>=6.1.0",
    "bandit>=1.7.5",
    "ipython>=8.18.1",
]

# Streamlit UI開発用（追加の依存関係）
streamlit-extra = [
    "plotly>=5.17.0",
    "altair>=5.0.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "bokeh>=3.2.0",
    "streamlit-option-menu>=0.3.6",
    "streamlit-ace>=0.1.1",
    "streamlit-aggrid>=0.3.4",
    "streamlit-javascript>=0.1.5",
    "python-dateutil>=2.8.2",
    "openpyxl>=3.1.0",
    "Pillow>=10.0.0",
    "tqdm>=4.65.0",
]

# API開発用（Vue.js連携含む）
api = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
]

# AWS本番デプロイ用 - オプション
aws = [
    "boto3>=1.34.0",  # S3を使用する場合のみ必要
    "awscli>=1.32.0",
    "python-lambda>=4.0.0",
]

# 全部入り（開発環境用）
all = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.1",
    "pytest-mock>=3.12.0",
    "black>=23.12.0",
    "isort>=5.13.2",
    "mypy>=1.7.1",
    "ruff>=0.1.9",
    "flake8>=6.1.0",
    "bandit>=1.7.5",
    "ipython>=8.18.1",
    "plotly>=5.17.0",
    "altair>=5.0.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "bokeh>=3.2.0",
    "streamlit-option-menu>=0.3.6",
    "streamlit-ace>=0.1.1",
    "streamlit-aggrid>=0.3.4",
    "streamlit-javascript>=0.1.5",
    "python-dateutil>=2.8.2",
    "openpyxl>=3.1.0",
    "Pillow>=10.0.0",
    "tqdm>=4.65.0",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "awscli>=1.32.0",
    "python-lambda>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/sakamo-wni/MobileCommentGenerator"
Documentation = "https://github.com/sakamo-wni/MobileCommentGenerator/blob/main/README.md"
Repository = "https://github.com/sakamo-wni/MobileCommentGenerator.git"
Issues = "https://github.com/sakamo-wni/MobileCommentGenerator/issues"

[project.scripts]
mobile-comment-gen = "src.workflows.comment_generation_workflow:run_comment_generation"

# ツール設定
[tool.black]
line-length = 100
target-version = ['py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | src/tool_design  # Vue.js フロントエンド除外
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["src/tool_design/**"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = [
    "src/tool_design/",
    "build/",
    "dist/",
]

[[tool.mypy.overrides]]
module = [
    "streamlit.*",
    "langgraph.*",
    "langchain.*",
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py310"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "src/tool_design",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "src/tool_design/*",
    "tests/*",
    "examples/*",
    "scripts/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
