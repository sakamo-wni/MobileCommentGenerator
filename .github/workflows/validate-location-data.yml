name: Validate Location Data

on:
  push:
    paths:
      - 'src/data/location_coordinates.csv'
      - 'src/data/Chiten.csv'
      - 'data/Chiten.csv'
      - 'src/ui/components/location_selector.py'
      - '.github/workflows/validate-location-data.yml'
  pull_request:
    paths:
      - 'src/data/location_coordinates.csv'
      - 'src/data/Chiten.csv'
      - 'data/Chiten.csv'
      - 'src/ui/components/location_selector.py'
      - '.github/workflows/validate-location-data.yml'

jobs:
  validate-locations:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Create Python validation script
      run: |
        cat << 'EOF' > validate_location_data.py
        import os
        import csv
        import sys
        
        # 期待される地点数
        EXPECTED_CHITEN_COUNT = 142
        EXPECTED_COORDINATES_COUNT = 162
        
        # Chiten.csvのパスを探す
        chiten_paths = ['src/data/Chiten.csv', 'data/Chiten.csv', 'Chiten.csv']
        chiten_path = None
        for path in chiten_paths:
            if os.path.exists(path):
                chiten_path = path
                break
        
        if chiten_path:
            # Read Chiten.csv
            with open(chiten_path, 'r', encoding='utf-8') as f:
                chiten_locations = [line.strip() for line in f if line.strip()]
            print(f"Chiten.csv ({chiten_path}): {len(chiten_locations)} 地点")
        else:
            print("警告: Chiten.csvが見つかりません")
            chiten_locations = []
        
        # location_coordinates.csvのパスを探す
        coord_paths = ['src/data/location_coordinates.csv', 'data/location_coordinates.csv']
        coord_path = None
        for path in coord_paths:
            if os.path.exists(path):
                coord_path = path
                break
        
        if coord_path:
            # Read location_coordinates.csv
            csv_locations = []
            with open(coord_path, 'r', encoding='utf-8') as f:
                reader = csv.DictReader(f)
                csv_locations = [row['location_name'] for row in reader]
            print(f"location_coordinates.csv ({coord_path}): {len(csv_locations)} 地点")
        else:
            print("警告: location_coordinates.csvが見つかりません")
            csv_locations = []
        
        # 検証結果
        validation_passed = True
        
        if chiten_locations and len(chiten_locations) != EXPECTED_CHITEN_COUNT:
            print(f"❌ 検証失敗: Chiten.csvに {len(chiten_locations)} 地点、期待値は {EXPECTED_CHITEN_COUNT}")
            validation_passed = False
        
        if csv_locations and len(csv_locations) != EXPECTED_COORDINATES_COUNT:
            print(f"❌ 検証失敗: location_coordinates.csvに {len(csv_locations)} 地点、期待値は {EXPECTED_COORDINATES_COUNT}")
            validation_passed = False
        
        if validation_passed and (chiten_locations or csv_locations):
            print("✅ 検証成功: 地点データが正しく設定されています")
        elif not chiten_locations and not csv_locations:
            print("⚠️ 警告: 地点データファイルが見つかりません")
            # ファイルが見つからない場合は成功とする（現在の実装に合わせる）
            sys.exit(0)
        else:
            sys.exit(1)
        EOF
    
    - name: Run Python validation
      run: python validate_location_data.py
    
    - name: Summary
      if: always()
      run: |
        echo "=== Location Data Validation Summary ==="
        echo "Expected Chiten.csv count: 142"
        echo "Expected location_coordinates.csv count: 162"
        echo "Check the output above for validation results"