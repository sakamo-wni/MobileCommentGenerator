name: Validate Location Data

on:
  push:
    paths:
      - 'shared/src/config/regions.ts'
      - 'src/data/location_coordinates.csv'
      - 'src/data/Chiten.csv'
      - 'src/ui/components/location_selector.py'
      - '.github/workflows/validate-location-data.yml'
  pull_request:
    paths:
      - 'shared/src/config/regions.ts'
      - 'src/data/location_coordinates.csv'
      - 'src/data/Chiten.csv'
      - 'src/ui/components/location_selector.py'
      - '.github/workflows/validate-location-data.yml'

jobs:
  validate-locations:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install Node dependencies
      run: |
        npm install
        cd shared && npm install && npm run build
    
    - name: Install TypeScript
      run: npm install -g typescript
    
    - name: Compile TypeScript validation scripts
      run: tsc -p tsconfig.scripts.json
    
    - name: Run location data validation
      run: |
        echo "=== Running basic location comparison ==="
        node compare_locations.js
        
        echo -e "\n=== Running detailed location comparison ==="
        node compare_locations_detailed.js
    
    - name: Create Python validation script
      run: |
        cat << 'EOF' > validate_python_locations.py
        import sys
        import csv
        import json
        import subprocess
        
        # Get expected count from TypeScript constants
        try:
            # Build and read TypeScript constants
            result = subprocess.run(['node', '-e', '''
                const constants = require("./shared/dist/config/constants");
                console.log(constants.LOCATION_CONFIG.EXPECTED_COUNT);
            '''], capture_output=True, text=True)
            
            if result.returncode == 0:
                EXPECTED_COUNT = int(result.stdout.strip())
            else:
                print("警告: TypeScript定数の読み込みに失敗しました。デフォルト値を使用します。")
                EXPECTED_COUNT = 142
        except:
            EXPECTED_COUNT = 142
        
        # Read Chiten.csv
        with open('src/data/Chiten.csv', 'r', encoding='utf-8') as f:
            chiten_locations = [line.strip() for line in f if line.strip()]
        
        # Read location_coordinates.csv
        csv_locations = []
        with open('src/data/location_coordinates.csv', 'r', encoding='utf-8') as f:
            reader = csv.DictReader(f)
            csv_locations = [row['location_name'] for row in reader]
        
        # Check consistency
        print(f"Chiten.csv地点数: {len(chiten_locations)}")
        print(f"location_coordinates.csv地点数: {len(csv_locations)}")
        print(f"期待される地点数: {EXPECTED_COUNT}")
        
        if len(chiten_locations) != EXPECTED_COUNT:
            print(f"❌ 検証失敗: Chiten.csvに {len(chiten_locations)} 地点、期待値は {EXPECTED_COUNT}")
            sys.exit(1)
        
        if len(csv_locations) != EXPECTED_COUNT:
            print(f"❌ 検証失敗: location_coordinates.csvに {len(csv_locations)} 地点、期待値は {EXPECTED_COUNT}")
            sys.exit(1)
        
        print("✅ 検証成功: Pythonの地点データが正しく設定されています")
        EOF
    
    - name: Run Python validation
      run: python validate_python_locations.py
    
    - name: Summary
      if: always()
      run: |
        echo "=== Location Data Validation Summary ==="
        echo "All location data sources should have exactly 142 locations"
        echo "- TypeScript regions.ts: Check console output above"
        echo "- Python CSV files: Check console output above"
        echo "Any discrepancies should be resolved before merging"